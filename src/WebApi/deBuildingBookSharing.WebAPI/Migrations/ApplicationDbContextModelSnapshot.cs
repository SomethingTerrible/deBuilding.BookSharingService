// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using deBuilding.BookSharingService.Infrastructure.Context;

#nullable disable

namespace deBuildingBookSharing.WebAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("deBuilding.BookSharingService.Infrastructure.Models.Author", b =>
                {
                    b.Property<Guid>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuthorId");

                    b.ToTable("Autor");
                });

            modelBuilder.Entity("deBuilding.BookSharingService.Infrastructure.Models.BookLiterary", b =>
                {
                    b.Property<Guid>("BookLiteraryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BookName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookLiteraryId");

                    b.ToTable("BookLiterary");
                });

            modelBuilder.Entity("deBuilding.BookSharingService.Infrastructure.Models.BookResponse", b =>
                {
                    b.Property<Guid>("BookResponseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BookLiteraryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Response")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("BookResponseId");

                    b.ToTable("BookResponse");
                });

            modelBuilder.Entity("deBuilding.BookSharingService.Infrastructure.Models.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("MultiSelect")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ParentCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("deBuilding.BookSharingService.Infrastructure.Models.ExchangeList", b =>
                {
                    b.Property<Guid>("ExchangeListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsBoth")
                        .HasColumnType("bit");

                    b.Property<Guid>("OfferListId_1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OfferListId_2")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WishListId_1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WishListId_2")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ExchangeListId");

                    b.ToTable("ExchangeList");
                });

            modelBuilder.Entity("deBuilding.BookSharingService.Infrastructure.Models.OfferList", b =>
                {
                    b.Property<Guid>("OfferListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BookLitararyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ISBN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PublicationYear")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("StatucId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("OfferListId");

                    b.ToTable("OfferList");
                });

            modelBuilder.Entity("deBuilding.BookSharingService.Infrastructure.Models.Status", b =>
                {
                    b.Property<Guid>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StatusName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusValue")
                        .HasColumnType("int");

                    b.HasKey("StatusId");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("deBuilding.BookSharingService.Infrastructure.Models.UserAddress", b =>
                {
                    b.Property<Guid>("UserAddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddrApart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddrCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddrHouse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddrIndex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddrStreet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddrStucture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserAddressId");

                    b.ToTable("UserAddress");
                });

            modelBuilder.Entity("deBuilding.BookSharingService.Infrastructure.Models.UserBase", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Avatar")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsStaff")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSuperUser")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("SecondName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("UserBase");
                });

            modelBuilder.Entity("deBuilding.BookSharingService.Infrastructure.Models.UserExchangeList", b =>
                {
                    b.Property<Guid>("UserExchangeListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ExchangeListId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OfferListId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Receiving")
                        .HasColumnType("bit");

                    b.Property<string>("TrackNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserExchangeListId");

                    b.ToTable("UserExchangeList");
                });

            modelBuilder.Entity("deBuilding.BookSharingService.Infrastructure.Models.UserList", b =>
                {
                    b.Property<Guid>("UserListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TypeList")
                        .HasColumnType("int");

                    b.HasKey("UserListId");

                    b.ToTable("UserList");
                });

            modelBuilder.Entity("deBuilding.BookSharingService.Infrastructure.Models.UserMsg", b =>
                {
                    b.Property<Guid>("UserMsgId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("MessageType")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserMessage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserMsgId");

                    b.ToTable("UserMsg");
                });

            modelBuilder.Entity("deBuilding.BookSharingService.Infrastructure.Models.UserValueCategory", b =>
                {
                    b.Property<Guid>("UserValueCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserListId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserValueCategoryId");

                    b.ToTable("UserValueCategory");
                });

            modelBuilder.Entity("deBuilding.BookSharingService.Infrastructure.Models.WishList", b =>
                {
                    b.Property<Guid>("WishListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserAddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("WishListId");

                    b.ToTable("WishList");
                });
#pragma warning restore 612, 618
        }
    }
}
